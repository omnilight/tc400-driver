import java.util.List;

import com.surelution.core.drivers.tc400.ClockingRecord;
import com.surelution.core.drivers.tc400.PersonInfo;
import com.surelution.core.drivers.tc400.Timer;

public class Test {

	public static void main(String[] args) {
		
//		Tc400Library tc400 = LibraryFactory.createTc400Library();
//		Kernel32Library kernel32 = LibraryFactory.createKernel32Library();
//		tc400.CKT_RegisterUSB(0, 0);
//		byte[] mmid = new byte[16];
//		tc400.CKT_GetMachineNumber(0, mmid);
//		System.out.println(new String(mmid));
//
//		int[] pLongRun = new int[1];
//		if (tc400.CKT_GetClockingNewRecordEx(0, pLongRun) == 1) {
//			while (true) {
//				int[] pClockings = new int[1];
//				int[] RecordCount = new int[1];
//				int[] pRetCount = new int[1];
//				ClockingRecordStructure clocking = new ClockingRecordStructure();
//				if (tc400.CKT_GetClockingRecordProgress(pLongRun[0],
//						RecordCount, pRetCount, pClockings) != 0) {
//					int ptemp = clocking.size();
//					for (int i = 0; i < pRetCount[0]; i++) {
//						kernel32.RtlMoveMemory(clocking, pClockings[0], ptemp);
//						pClockings[0] = pClockings[0] + ptemp;
//						String s = String.valueOf(clocking.PersonID)
//								+ new String(clocking.Time)
//								+ String.valueOf(clocking.Stat)
//								+ String.valueOf(clocking.ID);
//						StringBuffer sb = new StringBuffer("person id:");
//						sb.append(clocking.PersonID);
//						sb.append(";time:");
//						byte[] time = clocking.Time;
//						for(byte c : time) {
//							sb.append((char)c);
//						}
//						sb.append(";stat:");
//						sb.append(clocking.Stat);
//						sb.append(";id:");
//						sb.append(clocking.ID);
//						System.out.println(sb);
//					}
////					if (ptemp != 0)
////						tc400.CKT_FreeMemory(ptemp);
//					break;
//				}
//			}
//		}
		Timer timer = Timer.open();
		
		System.out.println(timer.getSerialNo());
		
//		while(true)  {
//			List<ClockingRecord> record = timer.getUnreadRecord();
//			if(record != null) {
//				for(ClockingRecord c : record) {
//					System.out.println(c);
//				}
//			}
//			try {
//				Thread.sleep(1000);
//			} catch (InterruptedException e) {
//				e.printStackTrace();
//			}
//		}
		List<PersonInfo> people = timer.getAllPeople();
		for(PersonInfo info :people) {
			System.out.println(info);
			if(info.isFp1Available())
				System.out.println(info.getFingerPrint1());
			if(info.isFp2Available())
				System.out.println(info.getFingerPrint2());
		}
		
		String p11 = "192,2,0,0,0,0,0,169,24,4,18,43,129,4,150,105,193,8,171,0,225,13,150,20,1,26,52,130,1,34,54,89,33,46,16,146,33,46,165,108,33,50,27,20,129,52,51,90,225,80,135,143,97,81,169,92,97,89,8,228,1,91,185,8,33,94,166,160,161,97,54,7,225,116,41,226,225,20,43,151,98,70,64,160,66,73,153,103,66,84,30,83,34,84,49,29,34,84,164,220,34,109,47,161,98,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,35,5,192,192,8,0,0,0,0,0,169,19,44,43,44,65,44,150,17,225,47,161,20,33,73,137,37,225,73,165,168,225,75,158,102,161,80,13,15,1,85,42,221,1,90,13,228,1,92,38,229,97,94,44,97,33,107,52,97,193,110,47,162,161,127,143,75,193,135,148,139,193,71,163,212,2,80,164,19,194,81,47,28,226,97,59,72,226,73,153,103,66,84,30,83,34,84,49,29,34,84,164,220,34,109,47,161,98,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,39,140,192";
		String p12 = "192,2,0,0,0,0,0,169,31,2,149,108,97,6,18,41,97,7,13,235,33,7,158,235,97,51,46,195,193,51,148,210,129,102,29,99,1,106,27,164,161,108,30,98,65,121,167,97,193,126,177,224,193,140,44,97,193,5,171,87,2,14,163,43,194,23,16,145,194,39,159,170,162,47,165,216,226,50,141,16,194,58,167,1,98,63,50,157,194,64,39,218,162,64,158,213,130,66,174,197,66,70,14,166,98,74,39,28,194,81,11,207,226,83,27,147,194,86,170,31,98,97,157,106,2,110,134,78,194,126,156,164,162,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,10,0,10,0,10,0,10,0,10,0,10,0,10,54,182,192,192,8,0,0,0,0,0,169,26,5,151,44,1,6,165,106,161,23,174,43,193,49,170,42,129,58,51,153,65,58,58,196,33,62,33,18,97,77,43,86,33,80,26,102,193,89,169,213,225,100,16,167,1,102,54,95,225,109,61,203,129,117,39,229,129,132,51,33,193,7,26,104,194,18,24,82,2,35,27,145,226,49,177,150,34,62,24,208,226,77,58,69,130,85,51,29,2,93,187,200,66,101,187,138,2,122,18,79,34,136,168,37,2,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,40,39,192";
		String p21 = "192,2,0,0,0,0,0,169,30,4,41,106,1,5,163,233,129,7,31,41,161,19,56,215,97,26,34,17,225,26,47,42,65,33,34,39,1,37,56,24,1,40,153,231,97,40,160,80,225,46,171,40,129,63,186,156,161,66,178,151,161,74,149,101,129,77,176,231,1,84,175,100,97,85,50,98,225,91,60,160,161,93,183,34,1,118,29,16,65,119,184,163,1,124,43,37,1,126,155,149,193,128,164,17,65,34,170,147,194,63,27,165,130,72,154,14,66,72,181,157,34,91,36,78,34,107,151,206,226,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,47,100,192,192,8,0,0,0,0,0,169,23,7,28,42,97,42,12,146,1,55,167,22,225,63,31,42,65,64,17,81,193,69,18,167,97,74,167,216,65,79,15,208,225,84,27,168,97,101,138,37,97,111,39,93,129,124,159,100,97,130,19,205,129,130,172,224,161,16,159,84,34,53,31,234,2,57,154,83,66,72,154,147,34,75,137,102,162,99,169,218,162,108,33,85,194,111,10,14,34,130,38,161,194,128,164,17,65,34,170,147,194,63,27,165,130,72,154,14,66,72,181,157,34,91,36,78,34,107,151,206,226,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,49,66,192";
		String p22 = "192,2,0,0,0,0,0,169,24,50,147,86,1,52,191,74,33,55,25,64,193,55,58,135,65,56,42,198,33,60,132,79,129,63,23,88,97,67,26,1,33,70,4,207,97,89,4,143,97,106,40,31,161,124,20,163,225,3,33,152,162,3,150,44,98,20,167,67,162,42,188,135,2,45,165,28,34,79,45,199,34,81,62,8,194,88,18,149,2,94,164,135,34,100,24,194,130,114,50,8,66,122,166,224,34,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,10,0,10,0,10,0,10,0,10,0,10,0,10,34,132,192,192,8,0,0,0,0,0,169,21,4,30,152,129,4,36,25,97,29,181,7,33,34,33,131,161,60,187,199,33,65,32,91,129,65,54,6,65,72,141,86,129,72,148,64,1,72,166,197,97,82,146,216,33,114,148,1,97,138,145,34,161,28,43,133,162,91,3,210,2,94,170,134,98,105,14,85,66,110,160,70,162,118,165,30,34,125,47,71,130,135,36,30,226,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,10,32,145,192";
		
		PersonInfo p1 = new PersonInfo();
		p1.setId("1");
		p1.setFingerPrint1(p11);
		p1.setFingerPrint2(p12);
		
//		timer.addPerson(p1);
//		timer.configFingerPrint(p1);
		
		PersonInfo p2 = new PersonInfo();
		p2.setId("2");
		p2.setFingerPrint1(p21);
		p2.setFingerPrint2(p22);
		timer.addPerson(p2);
		timer.configFingerPrint(p2);
	}
}
